package com.neuedu.dao;

import com.neuedu.common.ServerResponse;
import com.neuedu.pojo.User;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    List<User> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_user
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(User record);

    /**
     * 判断用户名是否存在
     * @param username
     * @return
     */
    int isExistUsername(@Param(value = "username") String username);

    /**
     * 判断邮箱是否存在
     * @param email
     * @return
     */
    int isExistEmail(@Param(value = "email") String email);

    /**
     * 通过账号密码进行登陆
     * @param username
     * @param password
     * @return
     */
    User findUserByUsernameAndPassword(@Param("username") String username,@Param("password") String password);

    /**
     * 通过用户名获取密保问题
     * @param username
     * @return
     */
    String forget_get_question(@Param("username") String username);

    /**
     * 校验密保问题和密码
     * @param username
     * @param question
     * @param answer
     * @return
     */
    int forget_check_answer(@Param("username")String username, @Param("question") String question, @Param("answer") String answer);

    /**
     * 重置密码
     * @param username
     * @param newpassword
     * @return
     */
    int forget_reset_password(@Param("username") String username, @Param("password") String newpassword);


    /**
     * 动态的修改用户信息(传入什么就修改什么，没有传入的字段保持原样)
     * @param user
     * @return
     */
    int updateUserByActivate(@Param("user") User user);

    User findUserByUsername(@Param("username") String username);

    int resetPasswordById(@Param("userId") Integer userId,@Param("password") String password);
}