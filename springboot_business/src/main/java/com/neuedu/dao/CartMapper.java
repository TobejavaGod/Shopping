package com.neuedu.dao;

import com.neuedu.pojo.Cart;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table neuedu_cart
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Cart record);

    /**
     * 根据用户名和商品id查询购物车信息
     * @param userId
     * @param productId
     * @return
     */
    Cart selectCartByUserIdAndProductId(@Param("userId") Integer userId, @Param("productId") Integer productId);

    /**
     * 根据用户id查询该用户购物车信息
     * @param userId
     * @return
     */
    List<Cart> selectCartsByUserId(@Param("userId") Integer userId);

    /**
     * 统计购物车中未选中商品的数量
     */
    Integer findAllUncheckedProduct(@Param("userId") Integer userId);

    /**
     * 根据用户id查询用户购物车中已勾选的商品
     */
    List<Cart> findCartsByIdAndChecked(@Param("userId") Integer userId);

    /**
     * 批量删除购物车中已选中的商品
     */
    int deleteBatch(@Param("cartList") List<Cart> cartList);

    /**
     * 更新购物车中某商品的数量
     */
    int updateProductByProductId(@Param("productId") Integer productId,@Param("userId") Integer userId,@Param("count")Integer count);


    int deleteProducts(@Param("list") List<Integer> productIdList);

    /**
     * 选中商品
     * @param productId
     * @return
     */
    int selectProduct(@Param("productId") Integer productId,@Param("userId") Integer userId);

    /**
     * 取消选中
     * @param productId
     * @param userId
     * @return
     */
    int unSelectProduct(@Param("productId") Integer productId,@Param("userId") Integer userId);

    /**
     * 全选
     * @param userId
     * @return
     */
    int selectAllProduct(@Param("userId") Integer userId);

    /**
     * 取消全选
     * @param userId
     * @return
     */
    int selectNoneProduct(@Param("userId") Integer userId);

}
